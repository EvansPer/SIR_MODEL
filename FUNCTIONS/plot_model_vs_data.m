function plot_model_vs_data(time,t,y,active_infections,total_removed,recovers,total_infected,model_recovered,model_total_infected)

% This function provides a graph with 4 subplots showing:
% - time vs active_infections fitted with t vs y(:,2) = I(t)
% - time vs total_removed fitted with t vs y(:,3) = R(t)
% - time vs recovers fitted with t vs model_recovered
% - time vs total_infected fitted with t vs model_total_infected

% It saves the figure generated in the folder "GRAPHS" with the name
% "MODEL_vs_DATA.jpg"

% INPUT PARAMETERS:
% - time: nx1 column vector (n generic) generated by the user containing the number of days to analyse 
% - t: nx1 column vector (n generic) generated by solving the ODE SIR model, being the
%   time vector of the former
% - y: nx3 matrix (n generic) being the ODE system solution of the SIR model 
%   (y(:,1) = S(t), y(:,2) = I(t), y(:,3) = R_m(t)) normalized to 1
% - active_infections: nx1 column vector (n generic) containing raw data imported by dataframe 
% - total_removed: nx1 column vector (n generic) containing raw data imported by dataframe 
% - recovers: nx1 column vector (n generic) containing raw data imported by dataframe 
% - total_infected: nx1 column vector (n generic) containing raw data imported by dataframe 
% - model_recovered: nx1 column vector obtained by subtracting model_D to
%   the SIR vector y(:,3) -> R(t) = R_m(t) - D(t) 
% - model_total_infected: nx1 column vector obtained by adding y(:,2) =
%   I(t) to y(:,3) = R_m(t)

% The function generates 4 subplots, a legend, draws a grid on the canva and titles the axes.
    
    figure('units','normalized','outerposition',[0 0 1 1]);

    subplot(2,2,1);
    plot(time,active_infections,"*","LineWidth",1); hold on;
    plot(t,y(:,2),"--","LineWidth",1); hold off;
    legend("Active infections","SIR I(t)","Location","east");
    grid on;
    xlabel("Time [days]","FontWeight","bold");
    ylabel("Active infections / I(t)","FontWeight","bold");

    subplot(2,2,2);
    plot(time,total_removed,".","LineWidth",1); hold on;
    plot(t,y(:,3),"--","LineWidth",1); hold off;
    legend("Removed","SIR R_m(t)","Location","east");
    grid on;
    xlabel("Time [days]","FontWeight","bold");
    ylabel("Removed / R_m(t)","FontWeight","bold")

    subplot(2,2,3);
    plot(time,recovers,"o","LineWidth",1); hold on;
    plot(t,model_recovered,"--","LineWidth",1); hold off;
    legend("Recovers","Model R(t)","Location","east");
    grid on;
    xlabel("Time [days]","FontWeight","bold");
    ylabel("Recovered / R(t)","FontWeight","bold");

    subplot(2,2,4);
    plot(time,total_infected,"Marker","hexagram","LineWidth",1); hold on;
    plot(t,model_total_infected,"--","LineWidth",1); hold off;
    legend("Total infected","SIR I_T(t)","Location","east");
    grid on;
    xlabel("Time [days]","FontWeight","bold");
    ylabel("Total infected / I_T(t)","FontWeight","bold");
    
    saveas(gcf,"GRAPHS/MODEL_vs_DATA.jpg");

end
